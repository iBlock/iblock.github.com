<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[iBlock的博客]]></title>
  <link href="http://iBlock.github.io/atom.xml" rel="self"/>
  <link href="http://iBlock.github.io/"/>
  <updated>2014-03-10T10:56:48+08:00</updated>
  <id>http://iBlock.github.io/</id>
  <author>
    <name><![CDATA[iBlock]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[测试标签]]></title>
    <link href="http://iBlock.github.io/blog/2014/03/10/ce-shi-biao-qian/"/>
    <updated>2014-03-10T10:55:32+08:00</updated>
    <id>http://iBlock.github.io/blog/2014/03/10/ce-shi-biao-qian</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[测试分类]]></title>
    <link href="http://iBlock.github.io/blog/2014/03/10/ce-shi-fen-lei/"/>
    <updated>2014-03-10T10:55:23+08:00</updated>
    <id>http://iBlock.github.io/blog/2014/03/10/ce-shi-fen-lei</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[测试博客]]></title>
    <link href="http://iBlock.github.io/blog/2014/03/10/%E6%B5%8B%E8%AF%95%E5%8D%9A%E5%AE%A2/"/>
    <updated>2014-03-10T10:47:23+08:00</updated>
    <id>http://iBlock.github.io/blog/2014/03/10/测试博客</id>
    <content type="html"><![CDATA[<p>这是一
个普通段落：</p>

<pre><code>&lt;pre&gt;&lt;code&gt;NSString *str = @"hello";
    NSLog(@"hello");
&lt;/code&gt;&lt;/pre&gt;
</code></pre>

<!-- lang:c -->


<pre><code>NSLog(@"NSString is red");
int i = 0; 
i = 1;  
for (int i = 0; i &lt; 100; i++) 
{
    printf("");
}
</code></pre>

<p><em>emphasize</em>   <strong>strong</strong>
<em>emphasize</em>   <strong>strong</strong></p>

<p>An <a href="http://www.baidu.com/" title="Title">example</a></p>

<p>An <a href="http://example.com/" title="Title">example</a>. Then, anywhere
else in the doc, define the link:</p>

<p>An email <a href="&#x6d;&#97;&#105;&#108;&#116;&#x6f;&#58;&#101;&#120;&#97;&#109;&#112;&#108;&#x65;&#64;&#101;&#120;&#x61;&#109;&#x70;&#x6c;&#x65;&#46;&#x63;&#111;&#109;">&#x65;&#120;&#97;&#109;&#112;&#x6c;&#101;&#64;&#x65;&#120;&#x61;&#x6d;&#x70;&#108;&#x65;&#x2e;&#99;&#x6f;&#109;</a> link.</p>

<p><img src="http://iBlock.github.io/images/email.png" title="Title" alt="alt text" /></p>

<h1>主题</h1>

<h2>标题</h2>

<h1>标题1</h1>

<h2>标题2</h2>

<h3>标题3</h3>

<ol>
<li>Foo</li>
<li><p>Bar</p></li>
<li><p>A list item
With multiple paragraphs</p></li>
<li><p>Bar</p></li>
<li><p>Abacus</p>

<ul>
<li>answer</li>
</ul>
</li>
<li>Bubbles

<ol>
<li>bunk</li>
<li>bupkis

<ul>
<li>BELITTLER</li>
</ul>
</li>
<li>burper</li>
</ol>
</li>
<li>Cunning</li>
</ol>


<blockquote><p>Email-style angle brackets
are used for blockquotes.</p>

<blockquote><p>And, they can be nested.</p></blockquote>

<h4>Headers in blockquotes</h4>

<ul>
<li>You can quote a list.</li>
<li>Etc.</li>
</ul>
</blockquote>

<p><code>&lt;code&gt;</code></p>

<pre><code>NSString *str = @"hello world";
NSLog(@"str = %@", str);
</code></pre>

<p><code>`this`</code>.</p>

<p><code>&lt;code&gt;</code> spans are delimited
by backticks.</p>

<p>You can include literal backticks
like <code>`this`</code>.</p>

<p>This is a normal paragraph.</p>

<pre><code>This is a preformatted
code block.
</code></pre>

<figure class='code'><figcaption><span>Time to be Awesome - awesome.rb </span></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="n">NSString</span> <span class="o">*</span><span class="n">str</span> <span class="o">=</span> <span class="s">@&quot;hello world&quot;</span><span class="p">;</span>
</span><span class='line'><span class="n">NSLog</span><span class="p">(</span><span class="s">@&quot;str = %@&quot;</span><span class="p">,</span> <span class="n">str</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>Discover if a number is prime</span><a href='http://www.noulakaz.net/weblog/2007/03/18/a-regular-expression-to-check-for-prime-numbers/'>Source Article</a></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">class</span> <span class="nc">Fixnum</span>
</span><span class='line'>  <span class="k">def</span> <span class="nf">prime?</span>
</span><span class='line'>    <span class="p">(</span><span class="s1">&#39;1&#39;</span> <span class="o">*</span> <span class="nb">self</span><span class="p">)</span> <span class="o">!~</span> <span class="sr">/^1?$|^(11+?)\1+$/</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
